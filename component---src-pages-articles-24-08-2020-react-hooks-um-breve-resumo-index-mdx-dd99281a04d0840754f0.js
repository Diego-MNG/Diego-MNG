(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{W1YB:function(e,a,o){"use strict";o.r(a),o.d(a,"_frontmatter",(function(){return m})),o.d(a,"default",(function(){return n}));var t=o("8o2o"),s=(o("q1tI"),o("7ljp")),d=o("LVPz"),m={path:"/react-hooks-um-breve-resumo",date:"2020-08-24T00:00:00.000Z",title:"React Hooks — Um “Breve” Resumo"},c={_frontmatter:m};function n(e){var a=e.components,o=Object(t.a)(e,["components"]);return Object(s.mdx)("wrapper",Object.assign({},c,o,{components:a,mdxType:"MDXLayout"}),Object(s.mdx)("p",null,Object(s.mdx)("img",Object.assign({parentName:"p"},{src:"https://cdn-images-1.medium.com/max/1800/1*Ea-TTjr8AKGdsg1nnBsZWw.jpeg",alt:"https://cdn-images-1.medium.com/max/1800/1*Ea-TTjr8AKGdsg1nnBsZWw.jpeg"}))),Object(s.mdx)("p",null,"Photo by Me :D"),Object(s.mdx)("h3",null,"React Hooks — Um “Breve” Resumo"),Object(s.mdx)("p",null,"Este artigo foi escrito com a finalidade fornecer um resumo dos principais aspectos do ",Object(s.mdx)("em",{parentName:"p"},"Hooks")," de uma maneira simples e direta para que você já consiga escrever seus primeiros componentes de função. Ele é voltado principalmente a usuários que possuam ao menos o conhecimento básico de React."),Object(s.mdx)("p",null,"Serão abordados os seguintes temas:"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"Motivos para usar ",Object(s.mdx)("em",{parentName:"li"},"Hooks")),Object(s.mdx)("li",{parentName:"ul"},"Migrando uma aplicação com componentes de classe"),Object(s.mdx)("li",{parentName:"ul"},"Definição de um ",Object(s.mdx)("em",{parentName:"li"},"Hook")),Object(s.mdx)("li",{parentName:"ul"},"Estados"),Object(s.mdx)("li",{parentName:"ul"},"Ciclo de vida"),Object(s.mdx)("li",{parentName:"ul"},"Criando um ",Object(s.mdx)("em",{parentName:"li"},"Hook")," customizado")),Object(s.mdx)("h3",null,"Por que usar Hooks?"),Object(s.mdx)("p",null,"Em grandes projetos que utilizam componentes de classe é comum encontrar lógicas que não se relacionam compartilhando o mesmo método de ciclo de vida, atribuindo complexidade ao componente e dificultando a manutenção. Com o ",Object(s.mdx)("em",{parentName:"p"},"Hook")," ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useEffect")," se torna simples a divisão do código em pequenos blocos que possuam apenas conteúdos relacionados."),Object(s.mdx)("p",null,"Em componentes de classes se torna difícil reaproveitar lógicas de estado sem recorrer a frameworks que nos obriga a refatorar o código utilizando diversos ",Object(s.mdx)("em",{parentName:"p"},"wrappers")," e ",Object(s.mdx)("em",{parentName:"p"},"reducers"),". Em componentes de função isso é resolvido criando o seu próprio ",Object(s.mdx)("em",{parentName:"p"},"Hook"),"."),Object(s.mdx)("p",null,"Classes se tornam complexas para diversos desenvolvedores iniciantes, principalmente pelo entendimento do uso do ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"this"),", o código se torna verboso e sempre é necessário se lembrar do ",Object(s.mdx)("em",{parentName:"p"},"bind")," de ",Object(s.mdx)("em",{parentName:"p"},"event listeners"),"."),Object(s.mdx)("h3",null,"Como migrar um projeto para Hooks?"),Object(s.mdx)("p",null,Object(s.mdx)("em",{parentName:"p"},"Hooks")," foi criado para ser totalmente compatível com componentes definidos como classes, podendo em um projeto coexistir componentes de função e de classe que se relacionam."),Object(s.mdx)("p",null,"É possível adotar uma estratégia de adesão gradual desta tecnologia, apenas criando novos componentes em ",Object(s.mdx)("em",{parentName:"p"},"Hooks")," e refatorando o código antigo apenas quando necessário trabalhar sobre ele."),Object(s.mdx)("h3",null,"O que é um Hook?"),Object(s.mdx)("p",null,Object(s.mdx)("em",{parentName:"p"},"Hook")," é uma função que permite a utlização de recursos do React para lidar com estados e ciclos de vida em um componente de função."),Object(s.mdx)("p",null,"É possível criar um ",Object(s.mdx)("em",{parentName:"p"},"Hook")," customizado para reaproveitar comportamentos e lógicas de estado que se repetem em diferentes componentes."),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Obs: Um Hook pode ser utilizado apenas em componentes de função.")),Object(s.mdx)("h3",null,"Estados"),Object(s.mdx)("p",null,"Para lidar com os estados de um componente de função é utilizado o ",Object(s.mdx)("em",{parentName:"p"},"Hook")," ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState"),". Ele recebe como parâmetro o valor inicial do estado a ser utlizado durante a primeira renderização e retorna um par de valores, sendo estes as atuais informações do estado e uma função para atualizá-las."),Object(s.mdx)(d.a,{id:"3fc32977e1a27bbdca62d93c6b1bd70b",file:"UseStateExample.js",mdxType:"Gist"}),Object(s.mdx)("p",null,Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://codesandbox.io/s/react-hooks-state-exemplo-m6ckx?file=/src/App.js"}),"https://codesandbox.io/s/react-hooks-state-exemplo-m6ckx?file=/src/App.js")),Object(s.mdx)("p",null,"O código acima é um exemplo da utilização do ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState"),", para definição do estado de contagem que será inicializado com o valor ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"0")," . É utilizado ",Object(s.mdx)("em",{parentName:"p"},"desestruturação")," para declaração do estado ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"count")," e sua função de atualização ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"setCount"),Object(s.mdx)("em",{parentName:"p"},".")," Neste componente ao clicar sobre o botão, o valor do estado será incrementado utilizando ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"setCount"),"."),Object(s.mdx)("p",null,"Este mesmo exemplo em um componente de classe seria semelhante ao código abaixo:"),Object(s.mdx)(d.a,{id:"3fc32977e1a27bbdca62d93c6b1bd70b",file:"ClassComponentStateExample.js",mdxType:"Gist"}),Object(s.mdx)("p",null,Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://codesandbox.io/s/react-state-exemplo-xst3x?file=/src/App.js"}),"https://codesandbox.io/s/react-state-exemplo-xst3x?file=/src/App.js")),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Obs: leia sobre desestruturação em: ",Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Operators/Atribuicao_via_desestruturacao"}),"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Operators/Atribuicao_via_desestruturacao"))),Object(s.mdx)("p",null,"Um estado é geralmente utilizado para armazenar ",Object(s.mdx)("em",{parentName:"p"},"números, textos, vetores")," e ",Object(s.mdx)("em",{parentName:"p"},"objetos.")," Independente do tipo do valor a ser armazenado, a utilização segue o mesmo padrão do primeiro exemplo."),Object(s.mdx)(d.a,{id:"3fc32977e1a27bbdca62d93c6b1bd70b",file:"UseStateExampleWithObject.js",mdxType:"Gist"}),Object(s.mdx)("p",null,Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://codesandbox.io/s/react-hooks-state-exemplo-ux3l5?file=/src/App.js:0-229"}),"https://codesandbox.io/s/react-hooks-state-exemplo-ux3l5?file=/src/App.js:0-229")),Object(s.mdx)("h3",null,"Ciclo de vida"),Object(s.mdx)("p",null,"Diferente de componentes de classe que possuem métodos específicos para cada estágio do ciclo de vida, em componentes de função é utilizado o ",Object(s.mdx)("em",{parentName:"p"},"Hook")," ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useEffect")," para lidar efeitos colaterais sobre as renderizações do componente."),Object(s.mdx)("p",null,"No exemplo abaixo será exibido um log com o valor do estado ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"count")," na primeira montagem do componente e toda vez que o mesmo for renderizado novamente. Ao final da execução do efeito e também quando o componente se demontar, o log informando a ocorrência será executado através da função retornada pelo ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useEffect"),"."),Object(s.mdx)(d.a,{id:"3fc32977e1a27bbdca62d93c6b1bd70b",file:"UseEffectExemple.js",mdxType:"Gist"}),Object(s.mdx)("p",null,Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://codesandbox.io/s/react-hooks-useeffect-exemplo-4k5fc?file=/src/App.js"}),"https://codesandbox.io/s/react-hooks-useeffect-exemplo-4k5fc?file=/src/App.js")),Object(s.mdx)("p",null,"As funções que são retornadas por um ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useEffect")," são conhecidas como “funções de limpeza”, normalmente usadas para limpar a lógica do componente e remover eventos antes da próxima renderização. É possível compreender sua execução analisando as mensagens de log. Sempre que o estado mudar e uma nova renderização for se iniciar, a função de limpeza será executada antes que o efeito da próxima renderização ocorra."),Object(s.mdx)("p",null,"É possível customizar a execução do efeito através do segundo parâmetro opcional do ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useEffect"),", para otimizar a performance do componente pulando a execução em momentos não necessários."),Object(s.mdx)("p",null,"No próximo exemplo o efeito que executa o log do contador será iniciado apenas quando o estado ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"count")," for atualizado. O mesmo se aplica ao log sobre o nome da pessoa que será executado na atualização do estado ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"person"),"."),Object(s.mdx)(d.a,{id:"3fc32977e1a27bbdca62d93c6b1bd70b",file:"UseEffectExemple2.js",mdxType:"Gist"}),Object(s.mdx)("p",null,Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://codesandbox.io/s/react-hooks-useeffect-pulando-execucao-exemplo-61yvv?file=/src/App.js:0-599"}),"https://codesandbox.io/s/react-hooks-useeffect-pulando-execucao-exemplo-61yvv?file=/src/App.js:0-599")),Object(s.mdx)("p",null,"No exemplo acima a lógica pertencente a cada um dos estados se mantém separada de forma organizada em dois efeitos distintos, diferente de um componente de classe do qual é nessário que todas as lógicas compartilhem os mesmos métodos de ciclo de vida, fazendo com que as duas lógicas sejam executados em toda renderização do componente. Veja o exemplo abaixo:"),Object(s.mdx)(d.a,{id:"3fc32977e1a27bbdca62d93c6b1bd70b",file:"ClassComponentLifeCycleExample.js",mdxType:"Gist"}),Object(s.mdx)("p",null,Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://codesandbox.io/s/react-ciclo-de-vida-exemplo-gzgh7?file=/src/App.js:0-831"}),"https://codesandbox.io/s/react-ciclo-de-vida-exemplo-gzgh7?file=/src/App.js:0-831")),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Obs: É possível impedir a que os dois logs sejam executados em toda renderização de um componente de classe, ao invés de executar apenas quando o estado referente ao log é atualizado, como ocorre no exemplo em Hooks. Seria necessário aplicar condicionais verificando a mudança do estado, o que tornaria ainda mais confusa a lógica em seu ciclo de vida.")),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Obs: É possível simular a execução dos métodos de ciclo de vida componentDidMount e componentWillUnmount em um componente de função passando um vetor vazio [] no segundo parâmetro do useEffect. Desta maneira o valor das dependências do efeito sempre serão as mesmas, garantindo que ele e seu método de limpeza seja executado apenas uma vez.")),Object(s.mdx)("h3",null,"Criando seu prório Hook"),Object(s.mdx)("p",null,"Com o crescimento de um projeto, é comum durante o desenvolvimento encontrar comportamentos e lógicas de estado que se repetem, normalmente espalhadas em diferentes componentes. Para evitar a redundância do código e facilitar a manuntenção do projeto, em componentes de função, é possível criar e utilizar um ",Object(s.mdx)("em",{parentName:"p"},"Hook")," personalizado para lidar com a lógica que é compartilhada entre os componentes."),Object(s.mdx)("p",null,"Um exemplo seria a busca pelo tamanho da janela do navegador para lidar com a responsividade. Em projetos ",Object(s.mdx)("em",{parentName:"p"},"WEB,")," é comum encontrar componentes que necessitam identificar o tamanho da janela para mudar seu comportamento e se adequar ao espaço disponível. O código abaixo ilustra a criação de um ",Object(s.mdx)("em",{parentName:"p"},"Hook")," customizado, ele nos permite obter a largura atual da janela em qualquer componente de função."),Object(s.mdx)(d.a,{id:"3fc32977e1a27bbdca62d93c6b1bd70b",file:"useWindowWidth.js",mdxType:"Gist"}),Object(s.mdx)("p",null,Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://codesandbox.io/s/hook-customizado-0n0gu?file=/src/useWindowWidth.js:0-411"}),"https://codesandbox.io/s/hook-customizado-0n0gu?file=/src/useWindowWidth.js:0-411")),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Obs: useLayoutEffect é um Hook do React que é sempre executado de forma síncrona após a renderização do componente. Muito utilizado para leitura do DOM.")),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Obs: É aconcelhável seguir a convenção de utilização do use no início de todo nome de Hook.")),Object(s.mdx)("p",null,"Sempre que a dimensão da janela mudar, o evento ",Object(s.mdx)("em",{parentName:"p"},"resize")," será disparado, atualizando o estado ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"width")," e retornando a largura atual para o componente onde o ",Object(s.mdx)("em",{parentName:"p"},"Hook")," é usado."),Object(s.mdx)("p",null,"Para demonstrar a utilização do ",Object(s.mdx)("em",{parentName:"p"},"Hook"),", o componente abaixo mudará a descrição de ",Object(s.mdx)("em",{parentName:"p"},"Desktop")," para ",Object(s.mdx)("em",{parentName:"p"},"Mobile")," quando a largura da janela estiver abaixo ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"500px"),"."),Object(s.mdx)(d.a,{id:"3fc32977e1a27bbdca62d93c6b1bd70b",file:"App.js",mdxType:"Gist"}),Object(s.mdx)("p",null,Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://codesandbox.io/s/hook-customizado-0n0gu?file=/src/App.js"}),"https://codesandbox.io/s/hook-customizado-0n0gu?file=/src/App.js")),Object(s.mdx)("p",null,"A largura atual da janela sempre estará disponível em ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"width"),". Mesmo que a janela seja redimencionada, o ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useWindowWidth")," manterá o valor atualizado."),Object(s.mdx)("h3",null,"Conclusão"),Object(s.mdx)("p",null,"O ",Object(s.mdx)("em",{parentName:"p"},"Hooks")," é uma alternativa a componentes de classe com o objetivo de simplificar e organizar componentes React. Com códigos simples e bem divididos através do ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useEffect"),", criando ",Object(s.mdx)("em",{parentName:"p"},"Hook")," customizado para reaproveitar lógicas de estado que se repetem e até removendo a necessidade do uso do ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"this")," para desenvolvedores iniciantes."),Object(s.mdx)("p",null,"Este é um resumo do básico necessário para a utilização do ",Object(s.mdx)("em",{parentName:"p"},"Hooks"),", sobre este tema podemos encontrar maiores informações e detalhes na própria documentação do ",Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"https://pt-br.reactjs.org/docs/hooks-intro.html"}),"React"),". Agora cabe a você se aventurar nesta brincadeira!"))}n.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-articles-24-08-2020-react-hooks-um-breve-resumo-index-mdx-dd99281a04d0840754f0.js.map